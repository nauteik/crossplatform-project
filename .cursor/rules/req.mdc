---
description: 
globs: 
alwaysApply: true
---
Core Project Goal:
Create a fully functional, cross-platform e-commerce application using Flutter for the front end and a back-end framework of choice. The app is for both buyers and store owners. Teams consist of 2-3 members.
Strict Constraint:
The app must only sell computers and computer components. Selling phones or any other products is strictly prohibited and will result in a zero grade for the project.
Content highlighted in purple in the original document must be strictly adhered to. Deviations lead to disqualification.
Key Feature Requirements:
Landing Screen (Home):
First screen shown.
Display products in grid views under categories: "Promotional Products", "New Products", "Best Sellers", and at least five other distinct categories (e.g., laptops, monitors).
Allow purchases without logging in (Guest Checkout). Auto-create account on guest purchase.
Pre-fill address for logged-in users during checkout.
Support only two user types: customers and a single administrator.
User Management:
User Registration (email, full name, shipping address only) & Login.
Profile Management: Update info, change/recover password, manage delivery addresses.
Product Management (Customer View):
Product Catalog (Dedicated Page): List/grid view with name, price, image, short description. Implement infinite scroll pagination (no page numbers).
Product Details: Name, price, brand, variants (min. 2 variants per product required for full marks, with independent inventory), description (min. 5 lines), min. 3 images. Section for user comments and star ratings.
Product Sorting: Min. 4 criteria, including Name (A-Z, Z-A) and Price (Asc/Desc).
Product Search & Filtering: Keyword search. Min. 3 filter criteria, mandatory filters for Brand and Price Range.
Reviews & Ratings: Comments allowed without login. Login required for star ratings (purchase not needed). Optional: Real-time updates via WebSockets.
Cart & Checkout:
Add to Cart, update quantities, remove items.
Cart Summary: Display items, total price, taxes, shipping fees.
Checkout Process: Multi-step for payment and shipping.
Guest Checkout functionality.
Coupon Codes: Apply one code per order (to total value), check validity/usage. Can combine with loyalty points/product discounts.
Order Management (Customer View):
Order Creation: Create record post-payment, show success screen, send confirmation email.
Order Tracking: View current status (pending, confirmed, etc.) and history of status changes with timestamps (newest first).
Order History: View list of past orders with details (number, date, total, status, products).
Loyalty Program: Earn 10% of order total as points (1 point = 1 VND equivalent, e.g., 1M VND order = 100 points = 100k VND). Points usable immediately on the next order.
Admin Management:
Dashboards: Simple (overview metrics/charts) and Advanced (detailed stats/charts filterable by time periods - year, quarter, month, week, custom range; track orders, revenue, profit).
Product Management: Add/Update/Delete products, categories, inventory. Set product-specific discounts (max 50%).
User Management: View/manage all users (ban, update).
Order Management: View list (newest first, pagination ~20/page, filter by time). View details (buyer info, products, total, status). Update order status (e.g., pending to confirmed).
Coupon Management: View list (code, value, usage, max uses, applied orders). Create new fixed-value codes (10k-100k VND), 5-char alphanumeric, max 10 uses, no expiry.
Customer Support Chat: Receive text/images from users, store messages in DB. All messages go to the single admin.
Constraint: No extra admin features beyond those listed.
Deployment:
Provide Android APK (arm64), Windows 64-bit EXE.
Mandatory: Deploy the web version to a public host (e.g., Firebase Hosting, GitHub Pages) and provide the URL. (Web deployment = 0.5 points).
Failure to provide working deployments results in zero grade.
Other Requirements:
UI/UX: Clear, user-friendly, intuitive design.
Team Collaboration: Use Git. Provide GitHub Insights screenshots showing at least one month of work with min. 2 commits/member/week. Failure results in a penalty.
Responsive Design: Adapt layout to various screen sizes.
Offline Capability: App must work offline. Show cached product list, profile, purchase history. Requires both online and offline databases (e.g., SQL, Hive).
Bonus Features (Max 2 points total, 0.5 points each):
Custom Backend: Do not use BaaS (like Firebase). Build your own backend (Express, Spring, ASP.NET, etc.) with your own database (MySQL, Mongo, etc.). Requires full source code submission.
Microservices Architecture: Deploy using microservices (min. 3 services beyond front-end/DB). Show asynchronous communication (e.g., RabbitMQ, Redis).
AI Integration: Implement features like an AI chatbot for product suggestions, image-based product search, or sentiment analysis for reviews.
ElasticSearch: Integrate ElasticSearch for enhanced product search performance and relevance.
Note: Bonus features must be clearly documented with evidence in the submission (README, video, self-evaluation form) to be considered for points.